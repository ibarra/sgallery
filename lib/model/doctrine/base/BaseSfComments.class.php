<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SfComments', 'doctrine');

/**
 * BaseSfComments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_comments
 * @property integer $image_id
 * @property string $user
 * @property string $site
 * @property string $email
 * @property string $message
 * @property date $created_at
 * @property date $updated_at
 * @property string $ip
 * @property boolean $is_valid
 * @property SfImages $SfImages
 * 
 * @method integer    getIdComments()  Returns the current record's "id_comments" value
 * @method integer    getImageId()     Returns the current record's "image_id" value
 * @method string     getUser()        Returns the current record's "user" value
 * @method string     getSite()        Returns the current record's "site" value
 * @method string     getEmail()       Returns the current record's "email" value
 * @method string     getMessage()     Returns the current record's "message" value
 * @method date       getCreatedAt()   Returns the current record's "created_at" value
 * @method date       getUpdatedAt()   Returns the current record's "updated_at" value
 * @method string     getIp()          Returns the current record's "ip" value
 * @method boolean    getIsValid()     Returns the current record's "is_valid" value
 * @method SfImages   getSfImages()    Returns the current record's "SfImages" value
 * @method SfComments setIdComments()  Sets the current record's "id_comments" value
 * @method SfComments setImageId()     Sets the current record's "image_id" value
 * @method SfComments setUser()        Sets the current record's "user" value
 * @method SfComments setSite()        Sets the current record's "site" value
 * @method SfComments setEmail()       Sets the current record's "email" value
 * @method SfComments setMessage()     Sets the current record's "message" value
 * @method SfComments setCreatedAt()   Sets the current record's "created_at" value
 * @method SfComments setUpdatedAt()   Sets the current record's "updated_at" value
 * @method SfComments setIp()          Sets the current record's "ip" value
 * @method SfComments setIsValid()     Sets the current record's "is_valid" value
 * @method SfComments setSfImages()    Sets the current record's "SfImages" value
 * 
 * @package    sp_gallery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSfComments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_comments');
        $this->hasColumn('id_comments', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'sf_comments_id_comments',
             'length' => 4,
             ));
        $this->hasColumn('image_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('user', 'string', null, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('site', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('email', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('message', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('ip', 'string', null, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('is_valid', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => 'false',
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SfImages', array(
             'local' => 'image_id',
             'foreign' => 'id_image'));
    }
}