<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SpUser', 'doctrine');

/**
 * BaseSpUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_user
 * @property string $username
 * @property string $password
 * @property string $first_name
 * @property string $last_name
 * @property date $date
 * @property string $email
 * @property Doctrine_Collection $SpAlbum
 * 
 * @method integer             getIdUser()     Returns the current record's "id_user" value
 * @method string              getUsername()   Returns the current record's "username" value
 * @method string              getPassword()   Returns the current record's "password" value
 * @method string              getFirstName()  Returns the current record's "first_name" value
 * @method string              getLastName()   Returns the current record's "last_name" value
 * @method date                getDate()       Returns the current record's "date" value
 * @method string              getEmail()      Returns the current record's "email" value
 * @method Doctrine_Collection getSpAlbum()    Returns the current record's "SpAlbum" collection
 * @method SpUser              setIdUser()     Sets the current record's "id_user" value
 * @method SpUser              setUsername()   Sets the current record's "username" value
 * @method SpUser              setPassword()   Sets the current record's "password" value
 * @method SpUser              setFirstName()  Sets the current record's "first_name" value
 * @method SpUser              setLastName()   Sets the current record's "last_name" value
 * @method SpUser              setDate()       Sets the current record's "date" value
 * @method SpUser              setEmail()      Sets the current record's "email" value
 * @method SpUser              setSpAlbum()    Sets the current record's "SpAlbum" collection
 * 
 * @package    sp_gallery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSpUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sp_user');
        $this->hasColumn('id_user', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'sp_user_id_user',
             'length' => 4,
             ));
        $this->hasColumn('username', 'string', null, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('password', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('first_name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('last_name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('email', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('SpAlbum', array(
             'local' => 'id_user',
             'foreign' => 'user_id'));
    }
}